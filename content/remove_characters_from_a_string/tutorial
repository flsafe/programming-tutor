<p>
Ah yes, this problem. This problem is actually a pretty common
phone screening problem or a warm up problem. As always there is 
an obvious and inefficient solution that your interviewer won't like.
And there exists an insightful and elegant solution that can help you
land your dream job.
</p>

<p>
The difference in efficiency and elegance is in the use
of the appropriate data structure. The technique you learn in this
tutorial can also be applied to similar problems.
</p>

<p>
We are tasked with removing certain characters from an array without
allocating a new array. Let's start with removing a char from an array. One
way to do this is to shift the elements in an array as shown in figure 1 below.
</p>

<p class="description">
Figure 1. We are deleting the character c by shifting everything
to the right of c left by one.
</p>
<img src="http://images.blueberrytree.ws.s3.amazonaws.com/shifting_array.png"/>

<p>
The algorithm to solve this problem then consits of scaning the input
string str one character at a time. If a character in str is included in
the remove_char array then, we delete it.
</p>

<p>
The algorithm depicted above is simple. Let's code it for fun. You can see
me code in listing 1 below. Feel free to post feedback if you catch me being
stupid.
</p>

<p class="description">
Listing 1. My naive code for solving this exercise.
</p>
<pre>
<code>
[[solution2.c]]
</code>
</pre>
